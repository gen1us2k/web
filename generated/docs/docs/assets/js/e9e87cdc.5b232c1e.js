"use strict";(self.webpackChunkdocusaurus_template=self.webpackChunkdocusaurus_template||[]).push([[2999],{3905:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return d}});var a=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=a.createContext({}),u=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=u(e.components);return a.createElement(s.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=u(t),d=r,f=m["".concat(s,".").concat(d)]||m[d]||p[d]||o;return t?a.createElement(f,i(i({ref:n},c),{},{components:t})):a.createElement(f,i({ref:n},c))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=m;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var u=2;u<o;u++)i[u]=t[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},14768:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return u},toc:function(){return c},default:function(){return m}});var a=t(87462),r=t(63366),o=(t(67294),t(3905)),i=["components"],l={id:"configuring",title:"Configuring Ory services"},s=void 0,u={unversionedId:"ecosystem/configuring",id:"ecosystem/configuring",isDocsHomePage:!1,title:"Configuring Ory services",description:"All Ory services share the same configuration system. This page documents the",source:"@site/docs/ecosystem/configuring.md",sourceDirName:"ecosystem",slug:"/ecosystem/configuring",permalink:"/docs/ecosystem/configuring",editUrl:"https://github.com/ory/docs/edit/master/docs/docs/ecosystem/configuring.md",tags:[],version:"current",lastUpdatedBy:"hackerman",lastUpdatedAt:1641375857,formattedLastUpdatedAt:"1/5/2022",frontMatter:{id:"configuring",title:"Configuring Ory services"},sidebar:"docs",previous:{title:"Software Versions",permalink:"/docs/ecosystem/versioning"},next:{title:"Deployment Fundamentals and Requirements",permalink:"/docs/ecosystem/deployment"}},c=[{value:"Configuration Format",id:"configuration-format",children:[],level:2},{value:"Loading Configuration from Files",id:"loading-configuration-from-files",children:[],level:2},{value:"Loading Configuration from Environment Variables",id:"loading-configuration-from-environment-variables",children:[],level:2},{value:"Loading Configuration from CLI Flags",id:"loading-configuration-from-cli-flags",children:[],level:2},{value:"Configuration Types",id:"configuration-types",children:[],level:2},{value:"Configuration References",id:"configuration-references",children:[],level:2}],p={toc:c};function m(e){var n=e.components,t=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"All Ory services share the same configuration system. This page documents the\ndetails and edge cases that apply to all Ory services."),(0,o.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Please note that Ory Oathkeeper uses an old configuration library and does not\nyet respect everything explained in this document."))),(0,o.kt)("p",null,"To find out more about configuring the individual services head to their\ncorresponding sections."),(0,o.kt)("h2",{id:"configuration-format"},"Configuration Format"),(0,o.kt)("p",null,"In Ory, configuration keys use underscores to separate words:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"some_config: value\n# Not:\n# someConfig: value\n")),(0,o.kt)("p",null,"Often, configuration keys have sub-keys"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"oauth2:\n  require_client_auth: true\n")),(0,o.kt)("p",null,"or arrays:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"social_sign_in:\n  providers:\n    - provider: google\n")),(0,o.kt)("h2",{id:"loading-configuration-from-files"},"Loading Configuration from Files"),(0,o.kt)("p",null,"Configuration can be loaded from the file system. Ory supports loading\nconfiguration from YAML"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"some_config: value\n")),(0,o.kt)("p",null,"and JSON files"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "some_config": "value"\n}\n')),(0,o.kt)("p",null,"You can combine several configuration files by defining the ",(0,o.kt)("inlineCode",{parentName:"p"},"-c")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"--config"),"\nflag multiple times when calling the CLI command or when importing configuration\nfiles to Ory Cloud:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"someCommand --config file/a.yml --config file/b.yml\n")),(0,o.kt)("p",null,"The files are then merged in order. Here, ",(0,o.kt)("inlineCode",{parentName:"p"},"a.yml"),"'s values are overwritten by\n",(0,o.kt)("inlineCode",{parentName:"p"},"b.yml"),"."),(0,o.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"When merging configuration values, the configuration system will try its best to\nmerge the keys. Please note that array values can will be overwritten!"),(0,o.kt)("pre",{parentName:"div"},(0,o.kt)("code",{parentName:"pre",className:"language-yml"},"--- # file A\nfoo:\n  - id: bar\n--- # file B\nfoo:\n  - id: baz\n--- # Result\nfoo:\n  - id: baz\n")))),(0,o.kt)("h2",{id:"loading-configuration-from-environment-variables"},"Loading Configuration from Environment Variables"),(0,o.kt)("p",null,"In cases where you need to load secret values - this is usually the case when\ndeploying Ory open source services yourself - you can use environment variables\nto override configuration values from files or CLI flags."),(0,o.kt)("p",null,"It is possible to set ",(0,o.kt)("em",{parentName:"p"},"any")," configuration value from environment variables. To\nunderstand how this works, let's look at an example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"some:\n  nested_key:\n    with_a_value: foo\n    and_array:\n      - id: foo\n      - id: bar\n")),(0,o.kt)("p",null,"The above values can be set with using the following environment variables:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"# Linux / macOS\nexport SOME_NESTED_KEY_WITH_A_VALUE=foo\nexport SOME_NESTED_KEY_AND_ARRAY_0_ID=foo\nexport SOME_NESTED_KEY_AND_ARRAY_1_ID=bar\n\n# Windows CMD\nset SOME_NESTED_KEY_WITH_A_VALUE=foo\nset SOME_NESTED_KEY_AND_ARRAY_0_ID=foo\nset SOME_NESTED_KEY_AND_ARRAY_1_ID=bar\n\n# Windows Powershell\n$env:SOME_NESTED_KEY_WITH_A_VALUE = foo\n$env:SOME_NESTED_KEY_AND_ARRAY_0_ID = foo\n$env:SOME_NESTED_KEY_AND_ARRAY_1_ID = bar\n")),(0,o.kt)("p",null,"As you can see, subkeys are separated with an underscore ",(0,o.kt)("inlineCode",{parentName:"p"},"_"),". If a subkey is an\narray, you can reference the array item by using the array index (",(0,o.kt)("inlineCode",{parentName:"p"},"0"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"1"),"). It\nis also possible to define a new array by using an array index that is not yet\nset:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"export SOME_NESTED_KEY_AND_ARRAY_2_BAR=baz\n")),(0,o.kt)("p",null,"The above would result in:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"some:\n  nested_key:\n    with_a_value: foo\n    and_array:\n      - id: foo\n      - bar: bar\n")),(0,o.kt)("p",null,"It is also possible to use JSON strings to denote complex configuration keys:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},'# Linux / macOS\nexport SOME_NESTED_KEY_AND_ARRAY=\'[{"id":"foo"},{"id":"bar"}]\'\n# Windows CMD\nset SOME_NESTED_KEY_AND_ARRAY=\'[{"id":"foo"},{"id":"bar"}]\'\n# Windows Powershell\n$env:SOME_NESTED_KEY_AND_ARRAY = \'[{"id":"foo"},{"id":"bar"}]\'\n')),(0,o.kt)("h2",{id:"loading-configuration-from-cli-flags"},"Loading Configuration from CLI Flags"),(0,o.kt)("p",null,"When using the CLI, you can also set configuration values using CLI flags. This\noption however is very rare and you will usually find configuration files or\nenvironment variables to set configuration values. To find information about CLI\nflags, append the help flag (",(0,o.kt)("inlineCode",{parentName:"p"},"-h"),") to the command you wish to use."),(0,o.kt)("h2",{id:"configuration-types"},"Configuration Types"),(0,o.kt)("p",null,"Ory uses JSON Schemas to define the configuration layout. JSON Schema defines\ntypes, which means that Ory is able to guess the type and convert strings (e.g.\nwhen using environment variables) to the correct type! A boolean type is\nconverted to ",(0,o.kt)("inlineCode",{parentName:"p"},"true")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"false")," accordingly for:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"export SOME_VAR=true\nexport SOME_OTHER_VAR=false\n")),(0,o.kt)("p",null,"The same applies to strings and numbers!"),(0,o.kt)("h2",{id:"configuration-references"},"Configuration References"),(0,o.kt)("p",null,"All of Ory's services have a full configuration reference available. You can\nfind them here:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://www.ory.sh/docs/keto/reference/configuration"},"Ory Keto")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://www.ory.sh/docs/kratos/reference/configuration"},"Ory Kratos")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://www.ory.sh/docs/hydra/reference/configuration"},"Ory Hydra")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://www.ory.sh/docs/oathkeeper/reference/configuration"},"Ory Oathkeeper"))))}m.isMDXComponent=!0}}]);
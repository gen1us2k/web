"use strict";(self.webpackChunkdocusaurus_template=self.webpackChunkdocusaurus_template||[]).push([[98659],{13919:function(e,n,t){function i(e){return!0===/^(\w*:|\/\/)/.test(e)}function a(e){return void 0!==e&&!i(e)}t.d(n,{b:function(){return i},Z:function(){return a}})},44996:function(e,n,t){t.d(n,{C:function(){return r},Z:function(){return o}});var i=t(52263),a=t(13919);function r(){var e=(0,i.Z)().siteConfig,n=(e=void 0===e?{}:e).baseUrl,t=void 0===n?"/":n,r=e.url;return{withBaseUrl:function(e,n){return function(e,n,t,i){var r=void 0===i?{}:i,o=r.forcePrependBaseUrl,s=void 0!==o&&o,l=r.absolute,c=void 0!==l&&l;if(!t)return t;if(t.startsWith("#"))return t;if((0,a.b)(t))return t;if(s)return n+t;var d=t.startsWith(n)?t:n+t.replace(/^\//,"");return c?e+d:d}(r,t,e,n)}}}function o(e,n){return void 0===n&&(n={}),(0,r().withBaseUrl)(e,n)}},58215:function(e,n,t){var i=t(67294);n.Z=function(e){var n=e.children,t=e.hidden,a=e.className;return i.createElement("div",{role:"tabpanel",hidden:t,className:a},n)}},26396:function(e,n,t){t.d(n,{Z:function(){return f}});var i=t(87462),a=t(67294),r=t(72389),o=t(79443);var s=function(){var e=(0,a.useContext)(o.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e},l=t(89521),c=t(86010),d="tabItem_1uMI";function u(e){var n,t,i,r=e.lazy,o=e.block,u=e.defaultValue,f=e.values,m=e.groupId,p=e.className,h=a.Children.map(e.children,(function(e){if((0,a.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),v=null!=f?f:h.map((function(e){var n=e.props;return{value:n.value,label:n.label}})),g=(0,l.lx)(v,(function(e,n){return e.value===n.value}));if(g.length>0)throw new Error('Docusaurus error: Duplicate values "'+g.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var w=null===u?u:null!=(n=null!=u?u:null==(t=h.find((function(e){return e.props.default})))?void 0:t.props.value)?n:null==(i=h[0])?void 0:i.props.value;if(null!==w&&!v.some((function(e){return e.value===w})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+w+'" but none of its children has the corresponding value. Available values are: '+v.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var b=s(),k=b.tabGroupChoices,y=b.setTabGroupChoices,T=(0,a.useState)(w),x=T[0],E=T[1],N=[],Z=(0,l.o5)().blockElementScrollPositionUntilNextRender;if(null!=m){var V=k[m];null!=V&&V!==x&&v.some((function(e){return e.value===V}))&&E(V)}var S=function(e){var n=e.currentTarget,t=N.indexOf(n),i=v[t].value;i!==x&&(Z(n),E(i),null!=m&&y(m,i))},F=function(e){var n,t=null;switch(e.key){case"ArrowRight":var i=N.indexOf(e.currentTarget)+1;t=N[i]||N[0];break;case"ArrowLeft":var a=N.indexOf(e.currentTarget)-1;t=N[a]||N[N.length-1]}null==(n=t)||n.focus()};return a.createElement("div",{className:"tabs-container"},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,c.Z)("tabs",{"tabs--block":o},p)},v.map((function(e){var n=e.value,t=e.label;return a.createElement("li",{role:"tab",tabIndex:x===n?0:-1,"aria-selected":x===n,className:(0,c.Z)("tabs__item",d,{"tabs__item--active":x===n}),key:n,ref:function(e){return N.push(e)},onKeyDown:F,onFocus:S,onClick:S},null!=t?t:n)}))),r?(0,a.cloneElement)(h.filter((function(e){return e.props.value===x}))[0],{className:"margin-vert--md"}):a.createElement("div",{className:"margin-vert--md"},h.map((function(e,n){return(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==x})}))))}function f(e){var n=(0,r.Z)();return a.createElement(u,(0,i.Z)({key:String(n)},e))}},79443:function(e,n,t){var i=(0,t(67294).createContext)(void 0);n.Z=i},88821:function(e,n,t){var i=t(67294);n.Z=function(){return i.createElement("div",{className:"admonition admonition-warning alert alert--danger"},i.createElement("div",{className:"admonition-heading"},i.createElement("h5",null,i.createElement("span",{className:"admonition-icon"},i.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},i.createElement("path",{fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"warning")),i.createElement("div",{className:"admonition-content"},i.createElement("p",null,"Never use API flows to implement Browser applications! Using API flows in Single-Page-Apps as well as server-side apps opens up several potential attack vectors, including Login and other CSRF attacks.")))}},12669:function(e,n,t){var i=t(26396),a=t(58215),r=t(67294),o=t(19055),s=t(52387),l=t(25108),c=function(e){var n=e.item;return n.code?(l.warn(n.code,"asfd"),r.createElement(o.Z,{className:"language-"+n.language,children:n.code})):n.image?r.createElement("img",{src:n.image,alt:n.alt}):n.codeFromRemote?r.createElement(s.Z,{language:n.language,link:n.codeFromRemote.link,src:n.codeFromRemote.src}):r.createElement("span",null,"Unknown item type: $",JSON.stringify(n))};n.Z=function(e){var n=e.items;return r.createElement(i.Z,{defaultValue:Object.keys(n)[0],values:Object.keys(n).map((function(e){return{label:n[e].label,value:e}}))},Object.keys(n).map((function(e){return r.createElement(a.Z,{key:e,value:e},r.createElement(c,{item:n[e]}))})))}},56368:function(e,n,t){t.d(n,{Z:function(){return f}});var i=t(26396),a=t(58215),r=t(67294),o=t(52387),s=t.p+"assets/images/browser-61597c2d37644d2e9a6cd62143a17d19.png",l=t.p+"assets/images/browser-3fffa4ddf3b8dbaa9171845af0b1ace3.png",c=t.p+"assets/images/browser-95c5fd81e495c104256cf0460ebd835a.png",d=t.p+"assets/images/browser-22673e53b8fd2d5b86732105f965b818.png",u=function(e){return e.charAt(0).toUpperCase()+e.slice(1)},f=function(e){var n,t=e.flow;switch(t){case"registration":n=r.createElement("img",{src:c,alt:"User Registration HTML Form"});break;case"login":n=r.createElement("img",{src:s,alt:"User Login HTML Form"});break;case"settings":n=r.createElement("img",{src:l,alt:"Profile Settings HTML Form"});break;case"recovery":n=r.createElement("img",{src:d,alt:"Account Recovery HTML Form"});break;case"verification":n=r.createElement("img",{src:d,alt:"Email Verification HTML Form"})}return r.createElement(i.Z,{defaultValue:"browser",values:[{label:"Browser UI",value:"browser"},{label:"Golang (API Flow)",value:"golang"},{label:"ExpressJS",value:"express"},{label:"ReactJS",value:"react"},{label:"React Native",value:"react-native"}]},r.createElement(a.Z,{value:"browser"},n),r.createElement(a.Z,{value:"express"},r.createElement(o.Z,{lang:"js",link:"https://github.com/ory/kratos-selfservice-ui-node/blob/master/src/routes/"+t+".ts",src:"https://raw.githubusercontent.com/ory/kratos-selfservice-ui-node/master/src/routes/"+t+".ts"}),"The views can be rather simple, as Ory Kratos provides you with all the information you need for rendering the forms. The following examples use Handlebars and a generic form generator to render the Flow:",r.createElement(i.Z,{defaultValue:"view",values:[{label:u(t)+" View",value:"view"},{label:"Generic Form View",value:"generic-form"},{label:"Example Input Form Element",value:"input-form"}]},r.createElement(a.Z,{value:"view"},r.createElement(o.Z,{lang:"handlebars",link:"https://github.com/ory/kratos-selfservice-ui-node/blob/master/views/"+t+".hbs",src:"https://raw.githubusercontent.com/ory/kratos-selfservice-ui-node/master/views/"+t+".hbs"})),r.createElement(a.Z,{value:"generic-form"},r.createElement(o.Z,{lang:"handlebars",link:"https://github.com/ory/kratos-selfservice-ui-node/blob/master/views/partials/ui.hbs",src:"https://raw.githubusercontent.com/ory/kratos-selfservice-ui-node/master/views/partials/ui.hbs"})),r.createElement(a.Z,{value:"input-form"},r.createElement(o.Z,{lang:"handlebars",link:"https://github.com/ory/kratos-selfservice-ui-node/blob/master/views/partials/ui_node_input_default.hbs",src:"https://raw.githubusercontent.com/ory/kratos-selfservice-ui-node/master/views/partials/ui_node_input_default.hbs"}))),"The rest of the form partials can be found"," ",r.createElement("a",{href:"https://github.com/ory/kratos-selfservice-ui-node/tree/master/views/partials"},"here"),"."),r.createElement(a.Z,{value:"react"},"A React example is currently in the making."),r.createElement(a.Z,{value:"golang"},r.createElement(o.Z,{lang:"tsx",link:"https://github.com/ory/kratos/blob/master/examples/go/selfservice/"+t+"/main.go.tsx",src:"https://raw.githubusercontent.com/ory/kratos/master/examples/go/selfservice/"+t+"/main.go"}),"The rest of the code examples partials can be found"," ",r.createElement("a",{href:"https://github.com/ory/kratos/blob/master/examples"},"here")),r.createElement(a.Z,{value:"react-native"},r.createElement(o.Z,{lang:"tsx",link:"https://github.com/ory/kratos-selfservice-ui-react-native/blob/master/src/components/Routes/"+u(t)+".tsx",src:"https://raw.githubusercontent.com/ory/kratos-selfservice-ui-react-native/master/src/components/Routes/"+u(t)+".tsx"}),"The views can be rather simple, as Ory Kratos provides you with all the information you need for rendering the forms.",r.createElement(i.Z,{defaultValue:"generic-form",values:[{label:"Generic Form View",value:"generic-form"},{label:"Example Input Form Element",value:"input-form"}]},r.createElement(a.Z,{value:"generic-form"},r.createElement(o.Z,{lang:"handlebars",link:"https://github.com/ory/kratos-selfservice-ui-react-native/blob/master/src/components/Form/Form.tsx",src:"https://raw.githubusercontent.com/ory/kratos-selfservice-ui-react-native/master/src/components/Form/Form.tsx"})),r.createElement(a.Z,{value:"input-form"},r.createElement(o.Z,{lang:"handlebars",link:"https://github.com/ory/kratos-selfservice-ui-react-native/blob/master/src/components/Form/Field.tsxs",src:"https://raw.githubusercontent.com/ory/kratos-selfservice-ui-react-native/master/src/components/Form/Field.tsx"}))),"The rest of the form partials can be found"," ",r.createElement("a",{href:"https://github.com/ory/kratos-selfservice-ui-react-native/tree/master/src"},"here")))}},52387:function(e,n,t){t.d(n,{Z:function(){return d}});var i=t(67294),a=t(83300),r=t.n(a),o=t(19055),s="container_2x1S",l=t(25108),c=function(e,n){if(!e)return 0;var t=n.findIndex((function(n){return n.indexOf(e)>-1}));return-1===t?0:t},d=function(e){var n=e.src,t=e.title,a=(0,i.useState)(""),d=a[0],u=a[1];(0,i.useEffect)((function(){var t,i,a;r()(n.replace("github.com","raw.githubusercontent.com").replace("/blob/","/")).then((function(e){return e.text()})).then((t=e,i=t.startAt,a=t.endAt,function(e){var n=e.split("\n"),t=c(i,n);t>0&&(n=["// ..."].concat(n.slice(t,-1)));var r=c(a,n);return r>0&&(n=[].concat(n.slice(0,r+1),["// ..."])),n.join("\n")})).then(u).catch(l.error)}),[]);var f="language-"+function(e){var n=e.split(".").pop();switch(n){case"jsx":return"jsx";case"tsx":return"tsx";case"ts":return"typescript";case"go":return"go";case"yaml":case"yml":return"yaml";case"js":return"javascript";case"html":return"html";case"pug":return"pug";default:return n}}(n),m='title="'+(t||function(e){var n=e.match(new RegExp("https://github.com/[^/]+/[^/]+/blob/[^/]+/(.+)","i"))||[];return n.length>=2?n[1]:e}(n))+'"';return i.createElement("div",{className:s},i.createElement(o.Z,{metastring:m,className:f,children:d}))}},59079:function(e,n,t){t.d(n,{Z:function(){return f}});var i=t(67294),a=t(57273),r="graph_1lrJ",o="pointer_3d8u",s="overlay_2fuY",l="visible_2Z3U",c="backdrop_2z5L",d=t(94184),u=t.n(d);a.Z.initialize({startOnLoad:!0,logLevel:"fatal",securityLevel:"strict",arrowMarkerAbsolute:!1,theme:"neutral",flowchart:{useMaxWidth:!0,htmlLabels:!0,rankSpacing:65,nodeSpacing:30,curve:"basis"},sequence:{useMaxWidth:!0},gantt:{useMaxWidth:!0}});var f=function(e){var n,t=e.chart,d=(0,i.useState)(!1),f=d[0],m=d[1],p=(0,i.useState)(void 0),h=p[0],v=p[1],g=(0,i.useState)("mermaid-"+Math.random().toString(36).substr(2,-1))[0],w=function(){return m(!f)};return(0,i.useEffect)((function(){a.Z.render(g,t,(function(e){v(e)}))}),[]),i.createElement(i.Fragment,null,i.createElement("div",{onClick:w,className:u()(r,o),dangerouslySetInnerHTML:{__html:h}}),i.createElement("div",{onClick:w,className:u()(s,o,r,(n={},n[l]=f,n))},i.createElement("div",{onClick:function(e){return e.stopPropagation()},className:u()(c,r),dangerouslySetInnerHTML:{__html:h}})))}},19582:function(e,n,t){var i=t(67294),a=t(59079);n.Z=function(e){return i.createElement(a.Z,{chart:(n=e,t=n.flows,r=void 0===t?["login","registration","settings","..."]:t,o=n.interactions,s=void 0===o?['"Log in"','"Sign Up"','"Update Email"',"..."]:o,l=n.success,c=void 0===l?"Perform flow-specific action (e.g. create user, set session cookie, ...)":l,d=r.length>1?"<"+r.join("|")+">":""+r.join("|"),"\nsequenceDiagram\n  participant B as API Client\n  participant K as Ory Kratos\n\n  B->>K: REST GET /self-service/"+d+"/api\n  K--\x3e>K: Create and store new "+r.join(", ")+" flow\n  K->>B: HTTP 200 OK with flow as application/json payload\n  B--\x3e>B: Render form using e.g. Native iOS UI Elements\n  B--\x3e>B: User fills out forms, clicks e.g. "+s+"\n  B->>K: REST POST to e.g. /self-service/"+d+"?flow=...>\n  K--\x3e>K: Validates and processes payload\n  alt Form payload is valid\n    K->>B: "+c+"\n  else Form payload invalid\n    K--\x3e>K: Update and store flow (e.g. add form validation errors)\n    K->>B: Respond with e.g. HTTP 400 Bad Request and updated flow as payload\n    B--\x3e>B: Render form and validation errors using e.g. Native iOS UI Elements\n    B--\x3e>K: Repeat flow with input data, submit, validate, ...\n  end\n")});var n,t,r,o,s,l,c,d}},64923:function(e,n,t){var i=t(67294),a=t(59079);n.Z=function(e){return i.createElement(i.Fragment,null,i.createElement(a.Z,{chart:(n=e,t=n.flows,r=void 0===t?["login","registration","settings","..."]:t,o=n.interactions,s=void 0===o?['"Log in"','"Sign Up"','"Update Email"',"..."]:o,l=n.success,c=void 0===l?"Perform flow-specific action (e.g. create user, set session cookie, ...)":l,d=r.length>1?"<"+r.join("|")+">":""+r.join("|"),"\nsequenceDiagram\n\n  participant B as Browser\n  participant K as Ory Kratos\n  participant A as Flow UI\n\n  B->>K: Follow link to /self-service/"+d+"/browser\n  K--\x3e>K: Create and store new "+r.join(", ")+" flow\n  K->>B: HTTP 302 Found <selfservice.flows."+d+".ui_url>?flow=<flow-id>\n\n  B->>A: Opens <selfservice.flows.<"+r.join("|")+">.ui_url>?flow=<flow-id>\n  A--\x3e>K: Fetches data to render forms using /selfservice/"+d+"/flows?id=<flow-id>\n  B--\x3e>A: Fills out forms, clicks e.g. "+s.join(", ")+"\n  B->>K: Submits form\n  K--\x3e>K: Validates and processes form payloads\n\n  alt Form payload is valid\n    K->>B: "+c+"\n  else Form payload invalid\n    K--\x3e>K: Update and store flow (e.g. add form validation errors)\n    K--\x3e>B: HTTP 302 Found <selfservice.flows."+d+".ui_url>?flow=<flow-id>\n    B->>A: Opens <selfservice.flows."+d+"?flow=<flow-id>\n    A--\x3e>K: Fetches data to render form fields and errors\n    B->>K: Repeat flow with input data, submit, validate, ...\n  end\n")}),i.createElement("p",null,"The ",i.createElement("em",null,"Flow UI")," (",i.createElement("strong",null,"your application!"),') is responsible for rendering the actual Login and Registration HTML Forms. You can of course implement one app for rendering all the Login, Registration, ... screens, and another app (think "Service Oriented Architecture", "Micro-Services" or "Service Mesh") is responsible for rendering your Dashboards, Management Screens, and so on.'));var n,t,r,o,s,l,c,d}},65152:function(e,n,t){t.r(n),t.d(n,{contentTitle:function(){return T},default:function(){return Z},frontMatter:function(){return y},metadata:function(){return x},toc:function(){return E}});var i=t(87462),a=t(63366),r=(t(67294),t(3905)),o=t(44996),s=t(59079),l=t(88821),c=t(64923),d=t(19582),u=t(12669),f={curl:{label:"Raw HTTP",language:"shell",code:t(70247).Z},js:{label:"JavaScript SDK",language:"js",code:t(43426).Z},go:{label:"Go SDK",language:"go",code:t(62723).Z}},m={curl:{label:"Raw HTTP",language:"shell",code:t(48253).Z},html:{label:"HTML",language:"html",code:t(89889).Z},jsx:{label:"ReactJS",language:"js",code:t(53639).Z},node:{label:"ExpressJS",language:"html",code:t(17003).Z},angular:{label:"Angular",language:"js",code:t(2794).Z}},p={curl:{label:"Raw HTTP",language:"shell",code:t(69056).Z},js:{label:"Node",language:"js",code:t(61137).Z},go:{label:"Go",language:"go",code:t(54620).Z}},h={browser:{label:"Browser UI",image:t(45001).Z,alt:"Email Verification and Account Activation HTML Form with validation errors"},missing:{label:"Missing Email",language:"shell",code:t(72658).Z}},v={browser:{label:"Browser UI",image:t(43445).Z,alt:"Email Verification and Account Activation HTML Form with success message"},missing:{label:"Email Sent",language:"shell",code:t(84954).Z}},g={browser:{label:"Browser UI",image:t(83350).Z,alt:"Email Verification and Account Activation HTML Form with an invalid challenge"},missing:{label:"Invalid Challenge",language:"shell",code:t(29084).Z}},w={browser:{label:"Browser UI",image:t(87250).Z,alt:"Email Verification and Account Activation HTML Form with an invalid challenge"},missing:{label:"Success State",language:"shell",code:t(79920).Z}},b=t(56368),k=["components"],y={id:"verify-email-account-activation",title:"Email and Phone Verification and Account Activation"},T=void 0,x={unversionedId:"self-service/flows/verify-email-account-activation",id:"version-v0.5/self-service/flows/verify-email-account-activation",isDocsHomePage:!1,title:"Email and Phone Verification and Account Activation",description:"initBrowserFlow,",source:"@site/versioned_docs/version-v0.5/self-service/flows/verify-email-account-activation.mdx",sourceDirName:"self-service/flows",slug:"/self-service/flows/verify-email-account-activation",permalink:"/kratos/docs/v0.5/self-service/flows/verify-email-account-activation",editUrl:"https://github.com/ory/kratos/edit/master/docs/versioned_docs/version-v0.5/self-service/flows/verify-email-account-activation.mdx",tags:[],version:"v0.5",lastUpdatedBy:"aeneasr",lastUpdatedAt:1607509062,formattedLastUpdatedAt:"12/9/2020",frontMatter:{id:"verify-email-account-activation",title:"Email and Phone Verification and Account Activation"},sidebar:"version-v0.5/docs",previous:{title:"Account Recovery and Password Reset",permalink:"/kratos/docs/v0.5/self-service/flows/account-recovery"},next:{title:"User Logout",permalink:"/kratos/docs/v0.5/self-service/flows/user-logout"}},E=[{value:"Account Activation",id:"account-activation",children:[],level:2},{value:"Verification Methods",id:"verification-methods",children:[{value:"Verification <code>link</code> Method",id:"verification-link-method",children:[],level:3}],level:2},{value:"Initialize Verification Flow to Request or Resend Verification Challenge",id:"initialize-verification-flow-to-request-or-resend-verification-challenge",children:[{value:"Verification for Browser Clients",id:"verification-for-browser-clients",children:[],level:3},{value:"Verification for API Clients",id:"verification-for-api-clients",children:[],level:3}],level:2},{value:"Verification Flow Payloads",id:"verification-flow-payloads",children:[{value:"Send Verification Link to Email",id:"send-verification-link-to-email",children:[],level:3}],level:2},{value:"Verification Flow Form Rendering",id:"verification-flow-form-rendering",children:[],level:2},{value:"Verification Form Validation",id:"verification-form-validation",children:[{value:"Verification Link via Email",id:"verification-link-via-email",children:[{value:"Successful Submission",id:"successful-submission",children:[],level:4}],level:3}],level:2},{value:"Unsuccessful Verification",id:"unsuccessful-verification",children:[],level:2},{value:"Successful Verification",id:"successful-verification",children:[],level:2}],N={toc:E};function Z(e){var n=e.components,t=(0,a.Z)(e,k);return(0,r.kt)("wrapper",(0,i.Z)({},N,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"Please read the ",(0,r.kt)("a",{parentName:"p",href:"../../self-service"},"Self-Service Flows")," overview before\ncontinuing with this document."))),(0,r.kt)("p",null,"ORY Kratos allows users to verify their out-of-band (email, telephone number,\n...) communication channels. Verification can be initiated"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"after registration or by performing a verification flow;"),(0,r.kt)("li",{parentName:"ul"},"manually by the user.")),(0,r.kt)("p",null,"There are two Verification Flow types supported in ORY Kratos:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Flows where the user sits in front of the Browser (e.g. website, single page\napp, ...)"),(0,r.kt)("li",{parentName:"ul"},"Flows where API interaction is required (e.g. mobile app, Smart TV, ...)")),(0,r.kt)("p",null,"The Verification Flow can be summarized as the following state machine:"),(0,r.kt)(s.Z,{chart:'\nstateDiagram\n  s1: Flow is initialized\n  s2: User Interface renders Verification Flow Forms\n  s3: Update Verification Flow with Error Context(s)\n  s4: Verification challenge initiated (e.g. link via email)\n  s5: Verification completed\n  [*] --\x3e s1 : User clicks "Verify Email/SMS/..."\n  s1 --\x3e s2\n  s2 --\x3e s4 : User provides valid verification data\n  s2 --\x3e s3 : User provides invalid verification data\n  s3 --\x3e s2\n  s4 --\x3e s5 : Challenge response valid\n  s4 --\x3e s3 : Challenge response invalid\n  s5 --\x3e [*]\n',mdxType:"Mermaid"}),(0,r.kt)("p",null,"To enable verification flows, make the following adjustments to your ORY Kratos\nconfiguration:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="path/to/config/kratos.yml"',title:'"path/to/config/kratos.yml"'},"selfservice:\n  methods:\n    link:\n      enabled: true\n  flows:\n    verification:\n      enabled: true\n")),(0,r.kt)("h2",{id:"account-activation"},"Account Activation"),(0,r.kt)("p",null,'Using this feature implements the so-called "account activation" with the\ndifference that ORY Kratos does not provide a feature that prevents signing into\naccounts without verified addresses. The reason being that verification is\nproving that the user controls the given address, but it is not an\nauthentication mechanism.'),(0,r.kt)("p",null,"You may however choose to limit what an identity without verified addresses is\nable to do in your application logic or API Gateways."),(0,r.kt)("h2",{id:"verification-methods"},"Verification Methods"),(0,r.kt)("p",null,"Currently, ORY Kratos only supports one verification method:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"The ",(0,r.kt)("inlineCode",{parentName:"li"},"link")," method performs verification of email addresses.")),(0,r.kt)("h3",{id:"verification-link-method"},"Verification ",(0,r.kt)("inlineCode",{parentName:"h3"},"link")," Method"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"link")," method is dis/enabled in the ORY Kratos config:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="path/to/my/kratos/config.yml"',title:'"path/to/my/kratos/config.yml"'},"selfservice:\n  methods:\n    link:\n      enabled: true\n      # ...\n")),(0,r.kt)("p",null,"Enabling this method will send out verification emails on new sign ups and when\na verified email address is updated."),(0,r.kt)("p",null,"Before sending out a verification E-Mail, ORY Kratos will check if the email\naddress is already known. Depending on the result, one of the two flows will be\nexecuted:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Unknown email address: An email is sent to the address informing the recipient\nthat someone tried to verify this email address but that it is not known by\nthe system:",(0,r.kt)("img",{alt:"Verification email for unknown address",src:(0,o.Z)("img/docs/email-verify-unknown.png")})),(0,r.kt)("li",{parentName:"ul"},"Known email address: An email which includes a verification link is sent to\nthe address:",(0,r.kt)("img",{alt:"Verification email for known address",src:(0,o.Z)("img/docs/email-verify-known.png")}))),(0,r.kt)("p",null,"This prevents Account Enumeration Attacks as it is not possible for a threat\nagent to determine if an account exists or not based on the verification flow."),(0,r.kt)("p",null,"The emails are using templates that can be customised as explained in\n",(0,r.kt)("a",{parentName:"p",href:"/kratos/docs/v0.5/concepts/email-sms#templates"},"Customizing E-Mail Templates"),". The\ntemplate IDs are:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Unknown email address: ",(0,r.kt)("inlineCode",{parentName:"li"},"verification_invalid")),(0,r.kt)("li",{parentName:"ul"},"Known email address: ",(0,r.kt)("inlineCode",{parentName:"li"},"verification_valid"))),(0,r.kt)("p",null,"You must define at least one Identity Traits field as a verification field. You\ncan do so by defining the following section in your Identity JSON Schema:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-diff"},' {\n   "$id": "https://schemas.ory.sh/presets/kratos/quickstart/email-password/identity.schema.json",\n   "$schema": "http://json-schema.org/draft-07/schema#",\n   "title": "Person",\n   "type": "object",\n   "properties": {\n     "traits": {\n       "type": "object",\n       "properties": {\n         "email": {\n           "type": "string",\n           "format": "email",\n           "ory.sh/kratos": {\n             "credentials": {\n               "password": {\n                 "identifier": true\n               }\n             },\n+            "verification": {\n+              "via": "email"\n+            }\n           }\n         }\n       }\n       "additionalProperties": false\n     }\n   }\n }\n')),(0,r.kt)("p",null,"You can also combine this with the password method login identifier (see example\nabove). That way, the field ",(0,r.kt)("inlineCode",{parentName:"p"},"email")," (or any field you define with these\nproperties) will serve as both the login identifier and as a verifiable email\naddress."),(0,r.kt)("h2",{id:"initialize-verification-flow-to-request-or-resend-verification-challenge"},"Initialize Verification Flow to Request or Resend Verification Challenge"),(0,r.kt)("p",null,"The first step is to initialize the Verification Flow. This sets up Anti-CSRF\ntokens and more. Each verification flow has a ",(0,r.kt)("inlineCode",{parentName:"p"},"state")," parameter which follows\nthe state machine:"),(0,r.kt)(s.Z,{chart:"\nstateDiagram-v2\n\t[*] --\x3e choose_method\n\tchoose_method --\x3e sent_email\n\tsent_email --\x3e sent_email\n\tnote right of sent_email\n\t    The user may fill out the email form input again as a way to re-send the email.\n\tend note\n\tsent_email --\x3e passed_challenge\n\tpassed_challenge --\x3e [*]\n",mdxType:"Mermaid"}),(0,r.kt)("p",null,"where"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"choose_method")," indicates that the user has not chosen a verification method\nyet. This is useful when ",(0,r.kt)("inlineCode",{parentName:"li"},"link")," is not the only verification method active."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"sent_email")," implies that the verification email has been sent out."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"passed_challenge")," is set when the user has clicked the verification link and\ncompleted the account verification.")),(0,r.kt)("h3",{id:"verification-for-browser-clients"},"Verification for Browser Clients"),(0,r.kt)("p",null,"The Verification Flow for browser clients relies on HTTP redirects between ORY\nKratos, your Verification UI, and the end-user's browser:"),(0,r.kt)(c.Z,{flows:["verification"],success:"Set verified flag and redirect to successful Verification Flow",interactions:['"Verify Email"'],mdxType:"SelfServiceBrowserFlow"}),(0,r.kt)("p",null,"To initialize the Verification Flow, point the Browser to\n",(0,r.kt)("a",{parentName:"p",href:"../../self-service#initialization-and-redirect-to-ui"},"the initialization endpoint"),":"),(0,r.kt)(u.Z,{items:m,mdxType:"CodeTabs"}),(0,r.kt)("p",null,"The server responds with a HTTP 302 redirect to the Verification UI, appending\nthe ",(0,r.kt)("inlineCode",{parentName:"p"},"?flow=<flow-id>")," query parameter (see the curl example) to the URL\nconfigured here:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="path/to/config/kratos.yml"',title:'"path/to/config/kratos.yml"'},"selfservice:\n  flows:\n    verification:\n      # becomes http://127.0.0.1:4455/verification?flow=df607aa1-d555-4b2a-b3e4-0f5a1d2fe6f3\n      ui_url: http://127.0.0.1:4455/verification\n")),(0,r.kt)("h3",{id:"verification-for-api-clients"},"Verification for API Clients"),(0,r.kt)(l.Z,{mdxType:"ApiWarning"}),(0,r.kt)("p",null,"The Verification Flow for API clients does not use HTTP Redirects and can be\nsummarized as follows:"),(0,r.kt)(d.Z,{flows:["verification"],success:"Set verified flag to true",interactions:['"Verify Email"'],mdxType:"SelfServiceApiFlow"}),(0,r.kt)("p",null,"To initialize the API flow, the client calls the API-flow initialization\nendpoint\n(",(0,r.kt)("a",{parentName:"p",href:"/kratos/docs/v0.5/reference/api#initialize-verification-flow-for-api-clients"},"REST API Reference"),")\nwhich returns a JSON response:"),(0,r.kt)(u.Z,{items:p,mdxType:"CodeTabs"}),(0,r.kt)("h2",{id:"verification-flow-payloads"},"Verification Flow Payloads"),(0,r.kt)("p",null,"Fetching the Verification Flow\n(",(0,r.kt)("a",{parentName:"p",href:"/kratos/docs/v0.5/reference/api#get-verification-flow"},"REST API Reference"),") is usually\nonly required for browser clients but also works for Verification Flows\ninitialized by API clients. All you need is a valid flow ID:"),(0,r.kt)(u.Z,{items:f,mdxType:"CodeTabs"}),(0,r.kt)("h3",{id:"send-verification-link-to-email"},"Send Verification Link to Email"),(0,r.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"The ",(0,r.kt)("inlineCode",{parentName:"p"},"link")," verification mode will always open a link in the browser, even if it\nwas initiated by an API client. This is because the user clicks the link in\nhis/her email client, which opens the browser."))),(0,r.kt)("p",null,"When the ",(0,r.kt)("inlineCode",{parentName:"p"},"link")," method is enabled, it will be part of the ",(0,r.kt)("inlineCode",{parentName:"p"},"methods")," payload in\nthe Verification Flow:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell",metastring:"script",script:!0},'$ curl -H "Accept: application/json" -s \\\n    \'http://127.0.0.1:4434/self-service/verification/flows?id=4fd52be5-5f80-4493-ab5c-90cb9bd331d2\' | jq -r \'.methods.link.config\'\n\n{\n  "action": "http://127.0.0.1:4433/self-service/verification/methods/link?flow=4fd52be5-5f80-4493-ab5c-90cb9bd331d2",\n  "method": "POST",\n  "fields": [\n    {\n      "name": "csrf_token",\n      "type": "hidden",\n      "required": true,\n      "value": "l6jPm/3mDxYAODgv4SDitfCyfWD3+PH+loc5//E/UDFiJA9P3h6KCNKDyn/OpIrlEjv6Tf4Zaurp7KN/dD07Yg=="\n    },\n    {\n      "name": "email",\n      "type": "email",\n      "required": true\n    }\n  ]\n}\n')),(0,r.kt)("h2",{id:"verification-flow-form-rendering"},"Verification Flow Form Rendering"),(0,r.kt)("p",null,"The Verification User Interface is a route (page / site) in your application\n(server, native app, single page app) that should render a verification form."),(0,r.kt)("p",null,"In stark contrast to other Identity Systems, ORY Kratos does not render this\nHTML. Instead, you need to implement the HTML code in your application (e.g.\nNodeJS + ExpressJS, Java, PHP, ReactJS, ...), which gives you extreme\nflexibility and customizability in your user interface flows and designs."),(0,r.kt)("p",null,"You will use the Verification Flow JSON response to render the verification form\nUI, which could looks as follows depending on your programming language and web\nframework:"),(0,r.kt)(b.Z,{flow:"verification",mdxType:"RenderFlow"}),(0,r.kt)("h2",{id:"verification-form-validation"},"Verification Form Validation"),(0,r.kt)("p",null,"The form payloads are then submitted to ORY Kratos which follows up with:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"An HTTP 302 Found redirect pointing to the Verification UI for Browser\nClients."),(0,r.kt)("li",{parentName:"ul"},"An ",(0,r.kt)("inlineCode",{parentName:"li"},"application/json")," response for API Clients.")),(0,r.kt)("h3",{id:"verification-link-via-email"},"Verification Link via Email"),(0,r.kt)("p",null,"To send the verification email, the end-user fills out the form. There might be\nvalidation errors such as a malformed email:"),(0,r.kt)(u.Z,{items:h,mdxType:"CodeTabs"}),(0,r.kt)("p",null,"When validation errors happen, browser clients receive a HTTP 302 Found redirect\nto the Verification Flow UI, containing the Verification Flow ID which includes\nthe error payloads."),(0,r.kt)("p",null,"For API Clients, the server typically responds with HTTP 400 Bad Request and the\nVerification Flow in the response payload as JSON."),(0,r.kt)("h4",{id:"successful-submission"},"Successful Submission"),(0,r.kt)("p",null,"On successful submission, an email will be sent to the provided address:"),(0,r.kt)(u.Z,{items:v,mdxType:"CodeTabs"}),(0,r.kt)("h2",{id:"unsuccessful-verification"},"Unsuccessful Verification"),(0,r.kt)("p",null,"If the verification challenge (e.g. the link in the verification email) is\ninvalid or expired, the user will be HTTP 302 redirected to the Verification UI."),(0,r.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"When an invalid or expired challenge is used, ORY Kratos initializes a new\nAccount Verification flow automatically. This flow will always be a\nBrowser-based flow because the challenge is completed by clicking a link!"))),(0,r.kt)("p",null,"The new Verification Flow includes an error message such as the following:"),(0,r.kt)(u.Z,{items:g,mdxType:"CodeTabs"}),(0,r.kt)("p",null,"Please keep in mind that this part of the flow always involves a Browser!"),(0,r.kt)("h2",{id:"successful-verification"},"Successful Verification"),(0,r.kt)("p",null,"If the verification challenge is completed (e.g. the sent verification link was\nclicked), the end-user's Browser is redirected to the Verification UI with a\nVerification Flow that has now the ",(0,r.kt)("inlineCode",{parentName:"p"},"state")," of ",(0,r.kt)("inlineCode",{parentName:"p"},"passed_challenge"),":"),(0,r.kt)(u.Z,{items:w,mdxType:"CodeTabs"}),(0,r.kt)("p",null,"You may also\n",(0,r.kt)("a",{parentName:"p",href:"/kratos/docs/v0.5/concepts/browser-redirect-flow-completion"},"configure a redirect URL"),"\ninstead which would send the end-user to that configured URL."))}Z.isMDXComponent=!0},83300:function(e,n){var t=function(){if("undefined"!=typeof self)return self;if("undefined"!=typeof window)return window;if(void 0!==t)return t;throw new Error("unable to locate global object")}();e.exports=n=t.fetch,t.fetch&&(n.default=t.fetch.bind(t)),n.Headers=t.Headers,n.Request=t.Request,n.Response=t.Response},69056:function(e,n){n.Z='$ curl -s -X GET \\\n  -H "Accept: application/json"  \\\n  http://127.0.0.1:4433/self-service/verification/api | jq\n\n{\n  "id": "4fd52be5-5f80-4493-ab5c-90cb9bd331d2",\n  "type": "api",\n  "expires_at": "2020-09-10T07:39:10.9503284Z",\n  "issued_at": "2020-09-10T06:39:10.9503284Z",\n  "request_url": "http://127.0.0.1:4433/self-service/verification/api",\n  "methods": {\n    // ...\n  },\n  "state": "choose_method"\n}\n'},54620:function(e,n){n.Z='package api\n\nimport (\n  "fmt"\n\n  "github.com/ory/kratos-client-go/client/public"\n  "github.com/ory/kratos-client-go/client"\n)\n\nfunc main() {\n  c := client.NewHTTPClientWithConfig(nil,\n    &client.TransportConfig{Host: "127.0.0.1:4433", BasePath: "/", Schemes: []string{"http"}})\n\n  rs, _ := c.Public.InitializeSelfServiceVerificationViaAPIFlow(public.\n    NewInitializeSelfServiceVerificationViaAPIFlowParams())\n\n  fmt.Printf("%+v", rs.Payload)\n}\n'},61137:function(e,n){n.Z="import {PublicApi} from '@ory/kratos-client'\n\nconst kratos = new PublicApi('http://127.0.0.1:4433/')\nkratos.initializeSelfServiceVerificationViaAPIFlow()\n  .then(({body}) => {\n    console.log(body) // see the Raw HTTP tab for the payload\n  })\n"},48253:function(e,n){n.Z='curl -s -v -X GET \\\n  -H "Accept: text/html"  \\\n  http://127.0.0.1:4433/self-service/verification/browser\n\n> GET /self-service/verification/browser HTTP/1.1\n> Host: 127.0.0.1:4433\n> User-Agent: curl/7.64.1\n> Accept: text/html\n>\n< HTTP/1.1 302 Found\n< Cache-Control: 0\n< Content-Type: text/html; charset=utf-8\n< Location: http://127.0.0.1:4455/verification?flow=df607aa1-d555-4b2a-b3e4-0f5a1d2fe6f3\n< Set-Cookie: csrf_token=y4Ocu6V83BapwJwbPw/pnlRHHw40DZbjq5iuDrxl0Ds=; Path=/; Domain=127.0.0.1; Max-Age=31536000; HttpOnly\n<\n<a href="http://127.0.0.1:4455/verification?flow=df607aa1-d555-4b2a-b3e4-0f5a1d2fe6f3">Found</a>.\n'},89889:function(e,n){n.Z='<a href="http://127.0.0.1:4433/self-service/verification/browser">Resend Verification Email</a>\n\n\x3c!-- or --\x3e\n\n<script>\n  const initverification = () => {\n    window.location.href = \'http://127.0.0.1:4433/self-service/verification/browser\'\n  }\n<\/script>\n\n<a onClick="initverification">Resend Verification Email</a>\n'},17003:function(e,n){n.Z="express.get('/verification', function (req, res) {\n  res.redirect(302, 'http://127.0.0.1:4433/self-service/verification/browser')\n})\n"},53639:function(e,n){n.Z="import React from 'react'\n\nconst MyComponent = () => (\n  <a href=\"http://127.0.0.1:4433/self-service/verification/browser\">Resend Verification Email</a>\n)\n"},2794:function(e,n){n.Z='<a href="http://127.0.0.1:4433/self-service/verification/browser">Resend Verification Email</a>\n'},70247:function(e,n){n.Z='$ curl -H "Accept: application/json" -s \\\n    \'http://127.0.0.1:4433/self-service/verification/flows?id=4fd52be5-5f80-4493-ab5c-90cb9bd331d2\' | jq\n\n{\n  "id": "4fd52be5-5f80-4493-ab5c-90cb9bd331d2",\n  "type": "api",\n  "expires_at": "2020-09-10T07:39:10.9503284Z",\n  "issued_at": "2020-09-10T06:39:10.9503284Z",\n  "request_url": "http://127.0.0.1:4433/self-service/verification/api",\n  "messages": null,\n  "methods": {\n    // ...\n  },\n  "state": "choose_method"\n}\n'},62723:function(e,n){n.Z='package samples\n\nimport (\n  "fmt"\n\n  "github.com/ory/kratos-client-go/client/public"\n  "github.com/ory/kratos-client-go/client"\n\n  "github.com/ory/kratos/internal/httpclient/client/public"\n)\n\nfunc main() {\n  c := client.NewHTTPClientWithConfig(nil,\n    &client.TransportConfig{Host: "127.0.0.1:4433", BasePath: "/", Schemes: []string{"http"}})\n\n  flowID := "" // Usually something like: res.Request.URL.Query().Get("flow")\n\n  rs, err := c.Public.GetSelfServiceVerificationFlow(\n    public.NewGetSelfServiceVerificationFlowParams().\n      WithID(flowID),\n  )\n\n  fmt.Printf("%+v", rs.Payload) //\n}\n'},43426:function(e,n){n.Z="import {CommonApi} from '@ory/kratos-client'\n\nconst kratos = new CommonApi('http://127.0.0.1:4433/')\n\nconst flowId = '' // usually something like: req.query.flow\n\nkratos.getSelfServiceVerificationFlow(flowId)\n  .then(({body}) => {\n    console.log(body) // see the Raw HTTP tab for the payload\n  })\n"},29084:function(e,n){n.Z='$ curl -H "Accept: application/json" -s \\\n    \'http://127.0.0.1:4434/self-service/verification/flows?id=4eb06fb8-c7ef-4870-a842-44210b9ca15d\' | jq\n\n{\n  "id": "4eb06fb8-c7ef-4870-a842-44210b9ca15d",\n  "type": "browser",\n  "expires_at": "2020-09-10T07:48:26.0939369Z",\n  "issued_at": "2020-09-10T06:48:26.0939369Z",\n  "request_url": "http://127.0.0.1:4433/self-service/verification/methods/link?token=asdf",\n  "messages": [\n    {\n      "id": 4070001,\n      "text": "The verification token is invalid or has already been used. Please retry the flow.",\n      "type": "error",\n      "context": {}\n    }\n  ],\n  "methods": {\n    "link": {\n      "method": "link",\n      "config": {\n        "action": "http://127.0.0.1:4433/self-service/verification/methods/link?flow=4eb06fb8-c7ef-4870-a842-44210b9ca15d",\n        "method": "POST",\n        "fields": [\n          {\n            "name": "csrf_token",\n            "type": "hidden",\n            "required": true,\n            "value": "Cd0dy7E6OpYE9NfSyVJQcAPMmvdHbuDbmCQUe46bCyxRt17AMbqpWGeL4wnLbB9H3lXaqbftXLHYAb3DuPkbhw=="\n          },\n          {\n            "name": "email",\n            "type": "email",\n            "required": true\n          }\n        ]\n      }\n    }\n  },\n  "state": "choose_method"\n}\n'},72658:function(e,n){n.Z='$ curl -H "Accept: application/json" -s \\\n    \'http://127.0.0.1:4433/self-service/verification/flows?id=73fcb010-da5c-4eb9-b329-3ed677a6897b\' | jq -r \'.methods.link.config\'\n\n{\n  "action": "http://127.0.0.1:4433/self-service/verification/methods/link?flow=73fcb010-da5c-4eb9-b329-3ed677a6897b",\n  "method": "POST",\n  "fields": [\n    {\n      "name": "csrf_token",\n      "type": "hidden",\n      "required": true,\n      "value": "xU9NtXUeGKKmLS95hXejOTo947GsndDzStKyxUUzjX4slitKpNSPro0SJtY1M7yTZXWL/g4LK3Fdrur1a2H8ag=="\n    },\n    {\n      "name": "email",\n      "type": "email",\n      "required": true,\n      "value": "",\n      "messages": [\n        {\n          "id": 4000002,\n          "text": "Property email is missing.",\n          "type": "error",\n          "context": {\n            "property": "email"\n          }\n        }\n      ]\n    }\n  ]\n}\n'},79920:function(e,n){n.Z="$ curl -H \"Accept: application/json\" -s \\\n  'http://127.0.0.1:4434/self-service/verification/flows?id=eb2aa29b-a726-4477-8635-9d5830f543fc' \\\n  | jq -r '.state'\n\npassed_challenge\n"},84954:function(e,n){n.Z='$ curl -H "Accept: application/json" -s \\\n    \'http://127.0.0.1:4433/self-service/verification/flows?id=ba0f508a-f2fb-435d-b5e2-0307db00d75d\' | jq\n\n{\n  "id": "ba0f508a-f2fb-435d-b5e2-0307db00d75d",\n  "type": "browser",\n  "expires_at": "2020-09-10T07:42:32.3468704Z",\n  "issued_at": "2020-09-10T06:42:32.3468704Z",\n  "request_url": "http://127.0.0.1:4433/self-service/verification/browser",\n  "active": "link",\n  "messages": [\n    {\n      "id": 1070002,\n      "text": "An email containing a verification link has been sent to the email address you provided.",\n      "type": "info",\n      "context": {}\n    }\n  ],\n  "methods": {\n    "link": {\n      "method": "link",\n      "config": {\n        "action": "http://127.0.0.1:4433/self-service/verification/methods/link?flow=ba0f508a-f2fb-435d-b5e2-0307db00d75d",\n        "method": "POST",\n        "fields": [\n          {\n            "name": "csrf_token",\n            "type": "hidden",\n            "required": true,\n            "value": "47dbOMg+HHU22BQuag9GpQLPE+ZceRgilVlZgyb/SbC73RgzSL6Pu1WnIPVoMQmS31ZTuKz6pEjVfPA7EJ1ZGw=="\n          },\n          {\n            "name": "email",\n            "type": "email",\n            "required": true,\n            "value": "aeneas@ory.sh"\n          }\n        ]\n      }\n    }\n  },\n  "state": "sent_email"\n}\n'},87250:function(e,n,t){n.Z=t.p+"assets/images/browser-challenge-completed-4a9dfbb911aa4085b72b6cee450d76ba.png"},83350:function(e,n,t){n.Z=t.p+"assets/images/browser-invalid-challenge-a588c20c6b645e2f27514c2f00d6e645.png"},45001:function(e,n,t){n.Z=t.p+"assets/images/browser-missing-b6126503634689b9ce786ceda596dfd4.png"},43445:function(e,n,t){n.Z=t.p+"assets/images/browser-success-c3b7d7ce5719cdc93e91891ae9e321ae.png"}}]);
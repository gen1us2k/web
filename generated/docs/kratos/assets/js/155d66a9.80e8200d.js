"use strict";(self.webpackChunkdocusaurus_template=self.webpackChunkdocusaurus_template||[]).push([[27566],{3905:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return m}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),p=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=p(e.components);return r.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=p(n),m=a,h=u["".concat(c,".").concat(m)]||u[m]||d[m]||o;return n?r.createElement(h,i(i({ref:t},l),{},{components:n})):r.createElement(h,i({ref:t},l))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=u;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var p=2;p<o;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},12707:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return c},metadata:function(){return p},toc:function(){return l},default:function(){return u}});var r=n(87462),a=n(63366),o=(n(67294),n(3905)),i=["components"],s={id:"totp",title:"2FA TOTP (Google Authenticator)"},c=void 0,p={unversionedId:"concepts/credentials/totp",id:"version-v0.8/concepts/credentials/totp",isDocsHomePage:!1,title:"2FA TOTP (Google Authenticator)",description:"Time-Based One-Time Password (TOTP) is a standardized algorithm (see",source:"@site/versioned_docs/version-v0.8/concepts/credentials/totp.mdx",sourceDirName:"concepts/credentials",slug:"/concepts/credentials/totp",permalink:"/kratos/docs/v0.8/concepts/credentials/totp",editUrl:"https://github.com/ory/kratos/edit/master/docs/versioned_docs/version-v0.8/concepts/credentials/totp.mdx",tags:[],version:"v0.8",lastUpdatedBy:"aeneasr",lastUpdatedAt:1635084599,formattedLastUpdatedAt:"10/24/2021",frontMatter:{id:"totp",title:"2FA TOTP (Google Authenticator)"},sidebar:"version-v0.8/docs",previous:{title:"2FA Look-up Secrets and Recovery Codes",permalink:"/kratos/docs/v0.8/concepts/credentials/lookup-secrets"},next:{title:"2FA FIDO2 & U2F (WebAuthn)",permalink:"/kratos/docs/v0.8/concepts/credentials/webauthn"}},l=[{value:"Configuration",id:"configuration",children:[{value:"Identity Schema",id:"identity-schema",children:[],level:3}],level:2},{value:"Identity Credentials",id:"identity-credentials",children:[],level:2}],d={toc:l};function u(e){var t=e.components,s=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},d,s,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Time-Based One-Time Password (TOTP) is a standardized algorithm (see\n",(0,o.kt)("a",{parentName:"p",href:"https://datatracker.ietf.org/doc/html/rfc6238"},"RFC6238"),") that is used by apps\nsupported by apps like Google Authenticator\n(",(0,o.kt)("a",{parentName:"p",href:"https://apps.apple.com/us/app/google-authenticator/id388497605"},"iOS"),",\n",(0,o.kt)("a",{parentName:"p",href:"https://play.google.com/store/apps/details?id=com.google.android.apps.authenticator2"},"Android"),"),\n",(0,o.kt)("a",{parentName:"p",href:"https://support.1password.com/one-time-passwords/"},"1Password"),",\n",(0,o.kt)("a",{parentName:"p",href:"https://bitwarden.com/help/article/authenticator-keys/"},"Bitwarden"),", and many\nothers."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Google Authenticator App",src:n(78904).Z})),(0,o.kt)("h2",{id:"configuration"},"Configuration"),(0,o.kt)("p",null,"Enabling this method is as easy as setting"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="kratos.config.yml"',title:'"kratos.config.yml"'},"selfservice:\n  methods:\n    totp:\n      enabled: true\n      config:\n        # The issuer (e.g. a domain name) will be shown in the TOTP app (e.g. Google Authenticator). It helps the user differentiate between different codes.\n        issuer: Example.com\n")),(0,o.kt)("h3",{id:"identity-schema"},"Identity Schema"),(0,o.kt)("p",null,"To help the user identify the correct code in their TOTP authenticator app, you\nshould set the ",(0,o.kt)("inlineCode",{parentName:"p"},"issuer")," (see code example above) to your brand name or domain\nname. However, users might have multiple identities registered in your system.\nTo help them distinguish between them, you can specify a traits in your Identity\nSchema which should be the TOTP account name (in the screenshot above\n",(0,o.kt)("inlineCode",{parentName:"p"},"alice@example.org"),"):"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-patch",metastring:'title="identity.schema.json"',title:'"identity.schema.json"'},"{\n  $schema: 'http://json-schema.org/draft-07/schema#',\n  type: 'object',\n  properties: {\n    traits: {\n      type: 'object',\n      properties: {\n        email: {\n          type: 'string',\n          format: 'email',\n          title: 'Your E-Mail',\n          minLength: 3,\n          'ory.sh/kratos': {\n            credentials: {\n              // ...\n+             totp: {\n+               account_name: true\n+             }\n            }\n            // ...\n          }\n        }\n        // ...\n      }\n      // ...\n    }\n  }\n}\n")),(0,o.kt)("h2",{id:"identity-credentials"},"Identity Credentials"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"totp")," method would generate a credentials block as follows:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"credentials:\n  password:\n    id: totp\n    identifiers:\n      # This is the identity's ID\n      - 802471b9-06f5-49d4-a88d-5e7d6bcfed22\n    config:\n      # This is the TOTP URL which contains the pre-shared key and some additional meta-information.\n      totp_url: otpauth://totp/Example:alice@example.org?secret=JBSWY3DPEHPK3PXP&issuer=Example\n")))}u.isMDXComponent=!0},78904:function(e,t,n){t.Z=n.p+"assets/images/totp-google-auth-app-c9a3b5b41ba9868773594af5bb519bcd.png"}}]);